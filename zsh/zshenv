## @filename: ~/.zshenv

# source "$HOME/.vim/bundle/gruvbox/gruvbox_256palette.sh"
# export NVIM_TUI_ENABLE_TRUE_COLOR=1

# speed up
skip_global_compinit=1

################################################################################
## alias {{{

alias bowi="bower install --save"
alias npmi="npm install --save"
alias automocha="supervisor -q -n exit -x mocha -- -b --recursive"

function D { mkdir -p $1 && cd $1 }
alias W='cd ~/workspace'
alias O='xdg-open'
alias dot="cd ~/.dotfiles && vim"

# Useful for remote hosts with tmux, open a new terminal window with its own
# tmux session. Understand which terminal emulator is currently in use.
alias S=$( realpath ~/.dotfiles/bin/ssh-terminal )

# Generate pronounceable password
alias genpassword='pwgen --capitalize --numerals --ambiguous 12 6'

alias stt='subl3 -n .'
alias st='subl3'
alias v='vim'

alias df='df -h'
alias du='du -sh'
alias lsg='ll | grep'
alias ka9='killall -9'
alias k9='kill -9'

alias nvminit='[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh'
alias nv='nvminit && nvm use v6.7.0'
alias kiexinit='test -s "$HOME/.kiex/scripts/kiex" && source "$HOME/.kiex/scripts/kiex" && kiex use 1.2.3'

svndiff() {
  svn diff $@ | colordiff | less
}

## I don't use dc, and somtime i mispell cd
alias dc='cd'

## fuzzy find password with `pass` password manager
## See
## - http://www.passwordstore.org/
## - https://github.com/junegunn/fzf
function Pass { local passpath=$( cd ~/.password-store && git ls-files | grep -v "^\." | fzf-tmux | sed "s/\.gpg$//" ); pass -c "${passpath}"; pass "${passpath}"; }

## I use docker so often I need this
alias dk="docker"
alias dkps="docker ps --format \"table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\""
alias dklog='docker logs --tail 10 -f'

## A better docker stat
## Thanks to rbravo-avantrip
## https://github.com/docker/docker/issues/20973#issuecomment-245036858
dkstats() {
  while true; do
    TEXT=$(docker stats --no-stream $(docker ps --format={{.Names}}));
    sleep 0.5;
    clear;
    echo "$TEXT";
  done
}

## Rebuild and restart a single container with docker-compose
dkup() {
  docker-compose stop ${1}
  docker-compose build ${1}
  docker-compose up -d --no-deps ${1}
}

## }}}

################################################################################
## Git Aliases {{{
## See ~/.gitconfig
alias ga='git add'            # Add files to the index
alias gA='git add -A'         # Add all files, remove from index deleted files
alias grv='git remote -v'     # show all Remotes Verbosely
alias glog='git l'            # log --graph --date=short
alias gdh='git diff HEAD'     # show all changes from Head
alias gdu='gd'                # show Unstaged changes
alias gds='git diff --cached' # show Staged changes
alias gpl='git pull'          # Pull
alias gps='git push'          # Push
alias gnb='git nb'            # New Branch aka checkout -b
alias gco='git co'            # Checkout

# Quick merge from origin/master, no fast forward
function gqm { if [ -z "${1}" ]; then git status -bs; echo -e "\nbranch?"; return; fi; git fetch ; git merge origin/${1} --no-ff }

## Commit, message as arguments, quotes not needed
function gcm { git commit -m "$*" }

## Add all files, Commit, Message as argument
function gacm { git add -A && git commit -m "$*" }
alias gcam="gacm" # Correct mistyping
alias gg="gacm" # I do this so many times a need a shortcut

## Add all files, Commit, use editor for message
function gac { git add -A && git commit }

## Add all files, Commit, Message as argument, then Push
function gacmps { git add -A && git commit -m "$*" && git push }
alias ggo="gacmps" # Go! shortcut for gacmps

## Clean all untracked files
function git-superclean { read -q "REPLY?Sure? "; if [ "${REPLY}" = 'y' ]; then echo && git reset --hard && git clean -ffdx; fi }

## Difference with commond ancestor
function git-diffanc {
  local main_branch;
  test -n "${2}" && main_branch="${2}" || main_branch="$( git rev-parse --abbrev-ref HEAD )"
  git diff $( git merge-base "${1}" "${main_branch}" ) "${1}"
}

## }}}

################################################################################
## rsync ssh tunnel with ControlPath {{{
## see: http://unix.stackexchange.com/a/50515/12662
ssh-rsync-fast-start() {
  mkdir -p ~/.ssh/ctl
  ssh -nNf -o ControlMaster=yes -o ControlPath="$HOME/.ssh/ctl/%L-%r@%h:%p" $@
}

ssh-rsync-fast() {
  rsync -e "ssh -o 'ControlPath=$HOME/.ssh/ctl/%L-%r@%h:%p'" $@
}

ssh-rsync-fast-stop() {
  ssh -O exit -o ControlPath="$HOME/.ssh/ctl/%L-%r@%h:%p" $@
}
## }}}

################################################################################
## Svn Aliases {{{
alias sst='svn status'
alias sa='svn add'
alias sd='svndiff'
function scm { svn commit -m "$*" }
function slog { svn log $@ | less }
## }}}

################################################################################
## Git/Subversion shortcuts {{{
## These shortcuts works both with Git and Subversion repository

function test_repo_git { git rev-parse &>/dev/null }
function test_repo_svn { svn info &>/dev/null }

function gd {
  if test_repo_git; then gdh $@; return; fi
  if test_repo_svn; then svndiff $@; return; fi
}

function gs {
  if test_repo_git; then git status; return; fi
  if test_repo_svn; then svn status; return; fi
}

function gl {
  if test_repo_git; then glog $@; return; fi
  if test_repo_svn; then slog $@; return; fi
}

## }}}
################################################################################
## nvim {{{
# vim airline themes not working with this variabile set
# see https://www.reddit.com/r/neovim/comments/44cnud/gruvbox_colors_are_off_when_i_enable_truecolor/
# export NVIM_TUI_ENABLE_TRUE_COLOR=1
## }}}
################################################################################

################################################################################
## minecraft {{{
minecraft-backup() {
  local root_dir="${HOME}/.minecraft"
  local src_dir="saves"
  local dir="${HOME}/.minecraft-backup"
  local archive_dir="${HOME}/.minecraft-backup"
  local archive="${archive_dir}/$( date +%Y%m%d-%H%M%S ).tar"
  echo "Saving to ${archive}"
  cd ${root_dir} && tar cpvf ${archive} ${src_dir} && ls -lh ${archive}
}
## }}}

################################################################################
## tmux {{{
## Needed for true color support. tmux.conf must match this.
export TERM=screen-256color
## }}}

###############################################################################
## Source local configurations
if [ -e ~/.zshenv.local ]; then source ~/.zshenv.local; fi

