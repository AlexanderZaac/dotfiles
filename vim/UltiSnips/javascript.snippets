## functions {{{
################################################################################
snippet ca=>
const ${1} = async (${2}) => {
	${3}
};
endsnippet
snippet cfn
const ${1} = function(${2}) {
	${3}
};
endsnippet
snippet vfn
var ${1} = function(${2}) {
	${3}
};
endsnippet
snippet afn
function(${1}) {
	${2}
}
endsnippet
snippet =>
(${1}) => {
	${2}
}
endsnippet
################################################################################
snippet clos
(function(){
	${1}
}());
endsnippet
################################################################################
snippet $fn
$(function(){
	${1}
});
endsnippet
## }}}
## node {{{
################################################################################
snippet req
const ${1} = require('$1');
endsnippet
snippet req2
const ${1} = require('${2}');
endsnippet
snippet req{
const { ${1} } = require('${2}');
endsnippet
snippet req_
const _ = require('lodash');
endsnippet
## }}}
## angular {{{
################################################################################
snippet $l
$log.log(${1});
endsnippet
## }}}
## mocha {{{
################################################################################
snippet des
describe('${1}', () => {
  ${2}
});
endsnippet
snippet it
it('${1}', () => {
  ${2}
});
endsnippet
snippet ait
it('${1}', async () => {
  ${2}
});
endsnippet
## }}}
## comments {{{
################################################################################
snippet /*
/* ${1} */
endsnippet
## }}}
## promise {{{
################################################################################
snippet rprom
return new Promise((resolve, reject) => {
  ${1}
});
endsnippet
## }}}
